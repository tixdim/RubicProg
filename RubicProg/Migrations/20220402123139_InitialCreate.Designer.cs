// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RubicProg.DataAccess.Context;

namespace RubicProg.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220402123139_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("RubicProg.DataAccess.Core.Models.ProfileUserRto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("DateRegistration")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBoy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserWhoProfileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserWhoProfileId")
                        .IsUnique();

                    b.ToTable("ProfileUsers");
                });

            modelBuilder.Entity("RubicProg.DataAccess.Core.Models.UserRto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("NickName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RubicProg.DataAccess.Core.Models.WorkoutRto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Exercise")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDone")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("StartWorkoutDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserWhoTrainingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkoutTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserWhoTrainingId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("RubicProg.DataAccess.Core.Models.ProfileUserRto", b =>
                {
                    b.HasOne("RubicProg.DataAccess.Core.Models.UserRto", "UserWhoProfile")
                        .WithOne("ProgileUser")
                        .HasForeignKey("RubicProg.DataAccess.Core.Models.ProfileUserRto", "UserWhoProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RubicProg.DataAccess.Core.Models.WorkoutRto", b =>
                {
                    b.HasOne("RubicProg.DataAccess.Core.Models.UserRto", "UserWhoTraining")
                        .WithMany("Workouts")
                        .HasForeignKey("UserWhoTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
